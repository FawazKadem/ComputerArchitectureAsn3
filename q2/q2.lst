


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             is_palindrome, CODE, READWRITE
    2 00000000                 ENTRY                        ;Start program
    3 00000000         
    4 00000000 E59F008C        LDR              r0, =STRING ;Store string in r0
                                                             so we can access i
                                                            t. r0 will go index
                                                             from left to right
                                                               
    5 00000004 E1A01000        MOV              r1, r0      ;r1 will index word
                                                             from right to left
                                                            
    6 00000008         
    7 00000008         
    8 00000008 E4D12001 
                       LASTCHAR
                               LDRB             r2, [r1], #1 ;LASTCHAR will mak
                                                            e r1 point to the r
                                                            ight most letter - 
                                                            increases the index
                                                             of r1 each loop
    9 0000000C E3520000        CMP              r2, #EoS    ;If r2 is not equal
                                                             to the end string
   10 00000010 1AFFFFFC        BNE              LASTCHAR    ;We loop until it i
                                                            s
   11 00000014 E2411002        SUB              r1, r1, #2  ;We want r1 to poin
                                                            t to last letter, n
                                                            ot end string, so m
                                                            ove it to the left 
                                                            2 spots
   12 00000018         
   13 00000018         PALCHECK                             ;PALCHECK iterates 
                                                            over word and deter
                                                            mines if it is a pa
                                                            lindrome
   14 00000018         ;MOVEFRONT moves the front pointer
   15 00000018 E5D03000 
                       MOVEFRONT
                               LDRB             r3, [r0]    ;stores the value b
                                                            eing pointed to so 
                                                            that we can compare
                                                             it
   16 0000001C E2800001        ADD              r0, r0, #1  ;moves pointer 1 to
                                                             the right
   17 00000020 E3530041        CMP              r3, #65     ;if r3 < 65
   18 00000024 BAFFFFFB        BLT              MOVEFRONT   ;we move pointer be
                                                            cause it is not poi
                                                            nting a valid chara
                                                            cter
   19 00000028 E353007A        CMP              r3, #122    ;if r3 > 122
   20 0000002C CAFFFFF9        BGT              MOVEFRONT   ;we move pointer to
                                                             the right because 
                                                            it is not pointing 
                                                            at valid char
   21 00000030 E353005B        CMP              r3, #91     ;
   22 00000034 B2833020        ADDLT            r3, r3, #32
   23 00000038 E3530061        CMP              r3, #97
   24 0000003C BAFFFFF5        BLT              MOVEFRONT
   25 00000040         
   26 00000040 E5D14000 



ARM Macro Assembler    Page 2 


                       MOVEBACK
                               LDRB             r4, [r1]
   27 00000044 E2411001        SUB              r1, r1, #1
   28 00000048 E3540041        CMP              r4, #65
   29 0000004C BAFFFFFB        BLT              MOVEBACK
   30 00000050 E354007A        CMP              r4, #122
   31 00000054 CAFFFFF9        BGT              MOVEBACK
   32 00000058 E354005B        CMP              r4, #91
   33 0000005C B2844020        ADDLT            r4, r4, #32
   34 00000060 E3540061        CMP              r4, #97
   35 00000064 BAFFFFF5        BLT              MOVEBACK
   36 00000068         
   37 00000068 E1530004 
                       COMPARE CMP              r3,r4
   38 0000006C 13A00002        MOVNE            r0,#2
   39 00000070 1A000006        BNE              ENDPROG
   40 00000074 E1500001        CMP              r0,r1
   41 00000078 0A000003        BEQ              ISPAL
   42 0000007C E2415001        SUB              r5, r1, #1
   43 00000080 E1500005        CMP              r0,r5
   44 00000084 0A000000        BEQ              ISPAL
   45 00000088 EAFFFFE2        B                PALCHECK
   46 0000008C         
   47 0000008C E3A00001 
                       ISPAL   MOV              r0,#1
   48 00000090         
   49 00000090 EAFFFFFE 
                       ENDPROG B                ENDPROG
   50 00000094         
   51 00000094         
   52 00000094         
   53 00000094         
   54 00000094         
   55 00000094 00000000        AREA             is_palindrome, DATA, READWRITE
   56 00000098 48 65 20 
              6C 69 76 
              65 64 20 
              61 73 20 
              61 20 64 
              65 76 69 
              6C 2C 20 
              65 68 3F STRING  DCB              "He lived as a devil, eh?" 
                                                            ;string
   57 000000B0 00      EoS     DCB              0x00        ;end of string
   58 000000B1                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\q2.d -o.\q2.o -ID
:\programs\Keil\ARM\RV31\INC -ID:\programs\Keil\ARM\CMSIS\Include --predefine="
__EVAL SETA 1" --list=.\q2.lst q2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COMPARE 00000068

Symbol: COMPARE
   Definitions
      At line 37 in file q2.s
   Uses
      None
Comment: COMPARE unused
ENDPROG 00000090

Symbol: ENDPROG
   Definitions
      At line 49 in file q2.s
   Uses
      At line 39 in file q2.s
      At line 49 in file q2.s

EoS 000000B0

Symbol: EoS
   Definitions
      At line 57 in file q2.s
   Uses
      At line 9 in file q2.s
Comment: EoS used once
ISPAL 0000008C

Symbol: ISPAL
   Definitions
      At line 47 in file q2.s
   Uses
      At line 41 in file q2.s
      At line 44 in file q2.s

LASTCHAR 00000008

Symbol: LASTCHAR
   Definitions
      At line 8 in file q2.s
   Uses
      At line 10 in file q2.s
Comment: LASTCHAR used once
MOVEBACK 00000040

Symbol: MOVEBACK
   Definitions
      At line 26 in file q2.s
   Uses
      At line 29 in file q2.s
      At line 31 in file q2.s
      At line 35 in file q2.s

MOVEFRONT 00000018

Symbol: MOVEFRONT
   Definitions
      At line 15 in file q2.s
   Uses
      At line 18 in file q2.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 20 in file q2.s
      At line 24 in file q2.s

PALCHECK 00000018

Symbol: PALCHECK
   Definitions
      At line 13 in file q2.s
   Uses
      At line 45 in file q2.s
Comment: PALCHECK used once
STRING 00000098

Symbol: STRING
   Definitions
      At line 56 in file q2.s
   Uses
      At line 4 in file q2.s
Comment: STRING used once
is_palindrome 00000000

Symbol: is_palindrome
   Definitions
      At line 1 in file q2.s
   Uses
      None
Comment: is_palindrome unused
10 symbols
343 symbols in table
